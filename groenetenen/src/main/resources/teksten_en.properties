aantalFilialen={0} branches
required=mandatory field
typeMismatch.java.lang.Integer=typ a number
typeMismatch.java.util.Date=typ a date
typeMismatch.java.math.BigDecimal=typ an amount
//methodInvocation.vanpostcode=a zipcode has a value between 1000 and 9999
//methodInvocation.totpostcode=a zipcode has a value between 1000 and 9999
geenFilialen=no branches found
javax.validation.constraints.Null.message=must be empty
javax.validation.constraints.NotNull.message=can not be empty
javax.validation.constraints.Min.message=miminum {value}
javax.validation.constraints.Max.message=maximum {value}
javax.validation.constraints.Size.message=between {min} and {max}
javax.validation.constraints.Digits.message=max. {integer} before and {fraction} after decimal point
javax.validation.constraints.Past.message=must be in the past
javax.validation.constraints.Future.message=must be in the future
javax.validation.constraints.Pattern.message=must meet pattern {regexp}
org.hibernate.validator.constraints.CreditCardNumber.message=invalid credit card number
org.hibernate.validator.constraints.Email.message=invalid e-mail address
org.hibernate.validator.constraints.Length.message=minimum {min} / maximum {max} characters
org.hibernate.validator.constraints.NotBlank.message=must include more than just spaces
org.hibernate.validator.constraints.Range.message=must be between {min} and {max}
be.vdab.constraints.Postcode=a zipcode has a value between 1000 and 9999
be.vdab.constraints.VanKleinerDanOfGelijkAanTot=from must be smaller than or equal to until
org.hibernate.validator.constraints.SafeHtml.message=can not contain any script
minstensEenGazonType=choose at least one typeof lawn